// <auto-generated />
using System;
using HotelManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManager.Migrations
{
    [DbContext(typeof(HotelReservationsManagerDbContext))]
    partial class HotelReservationsManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelManager.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("Adult")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelManager.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("AllInclusive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("date");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("date");

                    b.Property<bool>("IncludedBreakfast")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelManager.Models.ReservationsClient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationsClients");
                });

            modelBuilder.Entity("HotelManager.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("Occupied")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceBedAdult")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PriceBedChild")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelManager.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Type")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("HotelManager.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EGN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EGN");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime?>("LeftPosition")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Username")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelManager.Models.Reservation", b =>
                {
                    b.HasOne("HotelManager.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__Reservati__RoomN__14270015");

                    b.HasOne("HotelManager.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__UserC__6E01572D");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelManager.Models.ReservationsClient", b =>
                {
                    b.HasOne("HotelManager.Models.Client", "Client")
                        .WithMany("ReservationsClients")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Reservati__Clien__03F0984C");

                    b.HasOne("HotelManager.Models.Reservation", "Reservation")
                        .WithMany("ReservationsClients")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Reservati__Reser__02FC7413");

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelManager.Models.Room", b =>
                {
                    b.HasOne("HotelManager.Models.RoomType", "TypeNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("Type")
                        .IsRequired()
                        .HasConstraintName("FK__Rooms__Type__5CD6CB2B");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("HotelManager.Models.Client", b =>
                {
                    b.Navigation("ReservationsClients");
                });

            modelBuilder.Entity("HotelManager.Models.Reservation", b =>
                {
                    b.Navigation("ReservationsClients");
                });

            modelBuilder.Entity("HotelManager.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelManager.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelManager.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
